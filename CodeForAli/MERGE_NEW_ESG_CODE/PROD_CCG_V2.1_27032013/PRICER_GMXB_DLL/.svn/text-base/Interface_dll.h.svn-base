/*
* Launch projection with scenario file
* price a set of product (defined in parameter_file)
* with a table of scenarios build by an external program. 
* summarize (i.e aggregate the results and calculate the mean) the results 
* after a call of price
*/
_declspec (dllimport) int run_HA_file_mode(string& config, ofstream& log_strm, int nbWorker, int idWorker, string& s);
_declspec (dllimport) int price_file_mode(string& parameter_file, ofstream& log_strm,  int tot_nb_workers, int w_id, string& s);
_declspec (dllimport) int summarize(string& parameter_file, ofstream& log_strm, int nb_workers, int w_id, string& s);

/*
* Statistics on the inforce
*/
_declspec (dllimport) int stat_inforce(string& parameter_file, ofstream& log_strm, int nb_workers, int w_id, string& s);

/*
* Launch ESG and projection with the DLL
* summarize (i.e aggregate the results and calculate the mean) the results 
* after a call of price. This version is for the global pricing (esg + projection by DLL)
*/
_declspec (dllimport) int run_HA_esg_mode(string& config, ofstream& log_strm, int nbWorker, int idWorker, string& s);
_declspec (dllimport) int esg_projection(string& config_Projection, ofstream& log_strm, int nbWorker, int idWorker, string& s);
_declspec (dllimport) int summarize_esg(string& parameter_file, ofstream& log_strm, int nb_workers, int w_id, string& s);

/*
* deprecated functions ... TO DO remove this function
*/
int _declspec (dllimport)price_with_different_seed( string& parameter_file, ofstream& log_strm, int tot_nb_workers, int w_id, string& s);
int _declspec (dllimport)non_reg_tests(string& parameter_file, ofstream& log_strm, int nb_workers, int w_id, string& s);

/*
* delete_intermediate_files : This function deletes all the intermediate files generated by the workers.
* Must be used before each run
* check_assumptions : check all the configuration paths	
* copy_assumptions : copy all the assumptions before the run 
*/
_declspec (dllimport) int delete_intermediate_files(string& parameter_file, ofstream& log_strm, int nb_workers, int w_id, string& s);
_declspec (dllimport) int check_assumptions(string& parameter_file, ofstream& log_strm, int nb_workers, int w_id, string& s);
_declspec (dllimport) int copy_assumptions(string& parameter_file, ofstream& log_strm, int nb_workers, int w_id, string& s);

/*
* Launch calibration standalone with the DLL
*/
_declspec (dllimport) int run_calibration_standalone(string& config, ofstream& log_strm, int nbWorker, int idWorker, string& s);

/*
* Run Hedge Effectivness
*/
_declspec (dllimport) int price_HE(string& config, ofstream& log_strm, int tot_nb_workers, int w_id, string& s);
_declspec (dllimport) int summarize_HE(string& parameter_file_out, string& parameter_file_in, ofstream& log_strm, int nb_of_workers, string &s);
_declspec (dllimport) int run_HE_mode(string& config, ofstream & log_strm, int nb_of_workers, int worker_id, string &s);

/*
* ESG stand alone
*/
_declspec (dllimport) int run_esg_standalone(string& config, ofstream& log_strm, int nb_of_workers, int worker_id, string& s);
_declspec (dllimport) int esg_standalone(string& config_ESG,ofstream& log_strm,int nb_of_workers,int worker_id, string& s);

/*
* Calibration stand alone
*/
_declspec (dllimport) int calibration_standalone(string& config_calib, ofstream& log_strm, int nbWorker, int idWorker, string& s);

/*
* Risk Appetite
*/
_declspec (dllimport) int price_RA(string& parameter_file, ofstream& log_strm,  int tot_nb_workers, int w_id, string &s);
_declspec (dllimport) int summarize_RA(string& parameter_file, ofstream& log_strm, int nb_workers, int idWorker, string &s);
_declspec (dllimport) int run_RA_mode(string& config, ofstream& log_strm, int nbWorker, int idWorker, string& s);

/*
* Ageing Policies - Actuarial Tool
*/
_declspec (dllimport) int run_aging_policies( string& config, ofstream& log_strm, int tot_nb_workers, int w_id, string& s);

_declspec (dllimport) void XML_set(const string& xml_file,const map<string,map<string,string>>& pack);